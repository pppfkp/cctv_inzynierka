version: '3.8'

services:
  pgvector-db:
    image: pgvector/pgvector:pg17
    container_name: pgvector-container
    environment:
      POSTGRES_USER: ${PGVECTOR_DB_USER}
      POSTGRES_PASSWORD: ${PGVECTOR_DB_PASSWORD}
      POSTGRES_DB: ${PGVECTOR_DB_NAME}
    ports:
      - "${PGVECTOR_DB_PORT}:5432"
    volumes:
      - pgvector_data:/var/lib/postgresql/data
      - ./init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql # initialze the vector extension

  main-app:
    environment:
      PGVECTOR_DB_USER: ${PGVECTOR_DB_USER}
      PGVECTOR_DB_PASSWORD: ${PGVECTOR_DB_PASSWORD}
      PGVECTOR_DB_NAME: ${PGVECTOR_DB_NAME}
      PGVECTOR_DB_HOST: ${PGVECTOR_DB_HOST}
      PGVECTOR_DB_PORT: ${PGVECTOR_DB_PORT}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
    build:
      context: ./main_app
      dockerfile: Dockerfile            
    container_name: main_app
    ports:
      - "${MAIN_APP_PORT}:8000"
      - "2375:2375"
    depends_on:
      - pgvector-db
    volumes:
      - ./main_app:/usr/src/app  # Mount the Django app directory for live updates
      
  # detection-service:
  #   build:
  #     context: ./detection
  #     dockerfile: Dockerfile            
  #   container_name: detection-container
  #   env_file: .env
  #   command: tail -f /dev/null
  #   # ports:
  #   #   - "8001:8000"
  #   # depends_on:
  #   #   - pgvector-db
  #   volumes:
  #     - ./detection:/usr/src/app  # Mount the Django app directory for live updates    
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1 # alternatively, use `count: all` for all GPUs
  #             capabilities: [gpu]


volumes:
  pgvector_data:



