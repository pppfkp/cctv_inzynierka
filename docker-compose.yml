version: '3.8'

services:
  pgvector-db:
    image: pgvector/pgvector:pg17
    container_name: pgvector-container
    environment:
      POSTGRES_USER: ${PGVECTOR_DB_USER}
      POSTGRES_PASSWORD: ${PGVECTOR_DB_PASSWORD}
      POSTGRES_DB: ${PGVECTOR_DB_NAME}
    ports:
      - "${PGVECTOR_DB_PORT}:5432"
    volumes:
      - pgvector_data:/var/lib/postgresql/data

  timescale-db:
    image: timescale/timescaledb:latest-pg16
    container_name: timescale-container
    environment:
      POSTGRES_USER: pppfkp
      POSTGRES_PASSWORD: pppfkp123$
      POSTGRES_DB: detection
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      

  main-app:
    build:
      context: ./main_app
      dockerfile: Dockerfile            
    container_name: main_app
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - pgvector-db
      - timescale-db
    volumes:
      - ./main_app:/usr/src/app  # Mount the Django app directory for live updates

  # django-face-recognition-service:
  #   build:
  #     context: ./cctv_face_recognition_django_service
  #     dockerfile: Dockerfile            
  #   container_name: cctv-face-recognition-django-container
  #   env_file: .env
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     - pgvector-db
  #   volumes:
  #     - ./cctv_face_recognition_django_service:/usr/src/app  # Mount the Django app directory for live updates    
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1 # alternatively, use `count: all` for all GPUs
  #             capabilities: [gpu]

volumes:
  pgvector_data:
  timescale_data:
